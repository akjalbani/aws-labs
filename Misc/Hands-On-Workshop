- Install a Web Server on Amazon EC2 AMI
sudo yum update -y
-> Install Apache:
sudo yum install httpd -y
-> Start the Apache service
sudo systemctl start httpd
sudo systemctl enable httpd

===================================================
For windows - here is the userdata script to automate changes at bootstrap
<powershell>
# Set RDP Port
$portvalue = 443
Set-ItemProperty -Path 'HKLM:\SYSTEM\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -Name "PortNumber" -Value $portvalue

# Update Firewall Rules for New RDP Port
New-NetFirewallRule -DisplayName 'RDPPORTLatest-TCP-In' -Profile 'Public' -Direction Inbound -Action Allow -Protocol TCP -LocalPort $portvalue
New-NetFirewallRule -DisplayName 'RDPPORTLatest-UDP-In' -Profile 'Public' -Direction Inbound -Action Allow -Protocol UDP -LocalPort $portvalue

# Set Administrator Password
# Replace 'YourSecurePasswordHere!' with a strong password
$securePassword = ConvertTo-SecureString "YourSecurePasswordHere!" -AsPlainText -Force
Set-LocalUser -Name "Administrator" -Password $securePassword
</powershell>
### Once Windows instance state is running ans test checks are passed, resrtat the windows instance before
RDP into instance. USe public_ip:443 or public_dns:443 to login to instance.

==================================================================================
-> Demo website
https://github.com/akjalbani/demo_web/blob/main/demo_site.zip
-> Bucket Policy
{
  "Version": "2012-10-17",
  "Statement": [
    {
        "Principal": "*",
        "Effect": "Allow",
        "Action": "s3:GetObject",
        "Resource": "arn:aws:s3:::my-static-workshop-website-bucket/*"
    }
  ]
}

-> Lambda function
import json
import urllib.parse
import boto3

s3 = boto3.client('s3')

def lambda_handler(event, context):
    # 1 - Get the bucket name
    bucket = event['Records'][0]['s3']['bucket']['name']
    
    # 2 - Get the file/key name
    key = urllib.parse.unquote_plus(event['Records'][0]['s3']['object']['key'], encoding='utf-8')
    
    try:
        # 3 - Fetch the file from S3
        response = s3.get_object(Bucket=bucket, Key=key)
        
        # 4 - Deserialize the file's content
        text = response['Body'].read().decode()
        data = json.loads(text)
        
        # 5 - Print the content
        print(data)
        
        # 6 - Parse and print the transactions
        transactions = data['transactions']
        for record in transactions:
            print(record['transType'])
            
        return 'Success!'
    except Exception as e:
        print(e)
        raise e

-> transactions.json
{
    "transactions": [
        {
            "transType": "PURCHASE",
            "amount": 5.07
        },
        {
            "transType": "REFUND",
            "amount": 25.00
        }
    ]
}
